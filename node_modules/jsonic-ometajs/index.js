var ometajs_ = require("ometajs");

var AbstractGrammar = ometajs_.grammars.AbstractGrammar;

var BSJSParser = ometajs_.grammars.BSJSParser;

var BSJSIdentity = ometajs_.grammars.BSJSIdentity;

var BSJSTranslator = ometajs_.grammars.BSJSTranslator;

var JSON = require("json-ometajs");

var JSONIC = function JSONIC(source, opts) {
    JSON.call(this, source, opts);
};

JSONIC.grammarName = "JSONIC";

JSONIC.match = JSON.match;

JSONIC.matchAll = JSON.matchAll;

exports.JSONIC = JSONIC;

require("util").inherits(JSONIC, JSON);

JSONIC.prototype["token"] = function $token() {
    var t;
    return this._any(function() {
        return this._atomic(function() {
            return this._atomic(function() {
                return this._rule("spaces", false, [], null, this["spaces"]);
            }) || this._atomic(function() {
                return this._rule("fromTo", false, [ "/*", "*/" ], null, this["fromTo"]);
            }) || this._atomic(function() {
                return this._rule("fromTo", false, [ "//", "\n" ], null, this["fromTo"]);
            });
        });
    }) && this._seq(/^(true|false|null|:|"|'|\{|\}|\[|\]|,)/) && (t = this._getIntermediate(), true) && this._exec([ t, t ]);
};

JSONIC.prototype["root"] = function $root() {
    var v;
    return this._rule("value", false, [], null, this["value"]) && (v = this._getIntermediate(), true) && this._any(function() {
        return this._atomic(function() {
            return this._atomic(function() {
                return this._rule("spaces", false, [], null, this["spaces"]);
            }) || this._atomic(function() {
                return this._rule("fromTo", false, [ "/*", "*/" ], null, this["fromTo"]);
            }) || this._atomic(function() {
                return this._rule("fromTo", false, [ "//", "\n" ], null, this["fromTo"]);
            });
        });
    }) && this._rule("end", false, [], null, this["end"]) && this._exec(v);
};

JSONIC.parse = JSON.parse;

module.exports = JSONIC;